name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'   # Matches v1.0.0, v1.0.1-beta, etc.

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PLUGIN_NAME: portal-builder 

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: true  # Include submodules

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'

    - name: Install Composer dependencies
      run: composer install --no-dev --optimize-autoloader

    - name: Install git-archive-all
      run: pip install git-archive-all

    - name: Build Plugin
      run: make release

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PLUGIN_NAME }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

    env:
      PLUGIN_NAME: portal-builder 

    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.PLUGIN_NAME }}
        path: ./

    - name: List files in current directory
      run: ls -al ./

    - name: Get current date and short commit hash
      id: vars
      run: |
        echo "DATE=$(date +'%y-%m-%d')" >> $GITHUB_ENV
        echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Find the ZIP file
      id: find_zip
      run: |
        ZIP_FILE=$(ls ${PLUGIN_NAME}-*.zip | head -n 1)
        echo "ZIP_FILE=${ZIP_FILE}" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name == 'main' && format('rolling-release-{0}-{1}', env.DATE, env.COMMIT_HASH) || github.ref_name }}
        release_name: ${{ github.ref_name == 'main' && format('Rolling Release - {0} Hash {1}', env.DATE, env.COMMIT_HASH) || github.ref_name }}
        draft: false
        prerelease: ${{ github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/') }}

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ZIP_FILE }}
        asset_name: ${{ env.ZIP_FILE }}
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  changelog:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - name: Release Drafter
      uses: release-drafter/release-drafter@v5
      with:
        config-name: release-drafter.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
